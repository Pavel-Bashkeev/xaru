"use strict";

function _typeof(o) {
  return (_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o
  })(o)
}! function () {
  function o() {
    var o = window,
      e = document;
    if (!("scrollBehavior" in e.documentElement.style) || !0 === o.__forceSmoothScrollPolyfill__) {
      var t, l = o.HTMLElement || o.Element,
        r = {
          scroll: o.scroll || o.scrollTo,
          scrollBy: o.scrollBy,
          elementScroll: l.prototype.scroll || s,
          scrollIntoView: l.prototype.scrollIntoView
        },
        i = o.performance && o.performance.now ? o.performance.now.bind(o.performance) : Date.now,
        n = (t = o.navigator.userAgent, new RegExp(["MSIE ", "Trident/", "Edge/"].join("|")).test(t) ? 1 : 0);
      o.scroll = o.scrollTo = function () {
        void 0 !== arguments[0] && (!0 !== c(arguments[0]) ? m.call(o, e.body, void 0 !== arguments[0].left ? ~~arguments[0].left : o.scrollX || o.pageXOffset, void 0 !== arguments[0].top ? ~~arguments[0].top : o.scrollY || o.pageYOffset) : r.scroll.call(o, void 0 !== arguments[0].left ? arguments[0].left : "object" !== _typeof(arguments[0]) ? arguments[0] : o.scrollX || o.pageXOffset, void 0 !== arguments[0].top ? arguments[0].top : void 0 !== arguments[1] ? arguments[1] : o.scrollY || o.pageYOffset))
      }, o.scrollBy = function () {
        void 0 !== arguments[0] && (c(arguments[0]) ? r.scrollBy.call(o, void 0 !== arguments[0].left ? arguments[0].left : "object" !== _typeof(arguments[0]) ? arguments[0] : 0, void 0 !== arguments[0].top ? arguments[0].top : void 0 !== arguments[1] ? arguments[1] : 0) : m.call(o, e.body, ~~arguments[0].left + (o.scrollX || o.pageXOffset), ~~arguments[0].top + (o.scrollY || o.pageYOffset)))
      }, l.prototype.scroll = l.prototype.scrollTo = function () {
        if (void 0 !== arguments[0])
          if (!0 !== c(arguments[0])) {
            var o = arguments[0].left,
              e = arguments[0].top;
            m.call(this, this, void 0 === o ? this.scrollLeft : ~~o, void 0 === e ? this.scrollTop : ~~e)
          } else {
            if ("number" == typeof arguments[0] && void 0 === arguments[1]) throw new SyntaxError("Value could not be converted");
            r.elementScroll.call(this, void 0 !== arguments[0].left ? ~~arguments[0].left : "object" !== _typeof(arguments[0]) ? ~~arguments[0] : this.scrollLeft, void 0 !== arguments[0].top ? ~~arguments[0].top : void 0 !== arguments[1] ? ~~arguments[1] : this.scrollTop)
          }
      }, l.prototype.scrollBy = function () {
        void 0 !== arguments[0] && (!0 !== c(arguments[0]) ? this.scroll({
          left: ~~arguments[0].left + this.scrollLeft,
          top: ~~arguments[0].top + this.scrollTop,
          behavior: arguments[0].behavior
        }) : r.elementScroll.call(this, void 0 !== arguments[0].left ? ~~arguments[0].left + this.scrollLeft : ~~arguments[0] + this.scrollLeft, void 0 !== arguments[0].top ? ~~arguments[0].top + this.scrollTop : ~~arguments[1] + this.scrollTop))
      }, l.prototype.scrollIntoView = function () {
        if (!0 !== c(arguments[0])) {
          var t = p(this),
            l = t.getBoundingClientRect(),
            i = this.getBoundingClientRect();
          t !== e.body ? (m.call(this, t, t.scrollLeft + i.left - l.left, t.scrollTop + i.top - l.top), "fixed" !== o.getComputedStyle(t).position && o.scrollBy({
            left: l.left,
            top: l.top,
            behavior: "smooth"
          })) : o.scrollBy({
            left: i.left,
            top: i.top,
            behavior: "smooth"
          })
        } else r.scrollIntoView.call(this, void 0 === arguments[0] || arguments[0])
      }
    }

    function s(o, e) {
      this.scrollLeft = o, this.scrollTop = e
    }

    function c(o) {
      if (null === o || "object" !== _typeof(o) || void 0 === o.behavior || "auto" === o.behavior || "instant" === o.behavior) return !0;
      if ("object" === _typeof(o) && "smooth" === o.behavior) return !1;
      throw new TypeError("behavior member of ScrollOptions " + o.behavior + " is not a valid value for enumeration ScrollBehavior.")
    }

    function a(o, e) {
      return "Y" === e ? o.clientHeight + n < o.scrollHeight : "X" === e ? o.clientWidth + n < o.scrollWidth : void 0
    }

    function d(e, t) {
      var l = o.getComputedStyle(e, null)["overflow" + t];
      return "auto" === l || "scroll" === l
    }

    function f(o) {
      var e = a(o, "Y") && d(o, "Y"),
        t = a(o, "X") && d(o, "X");
      return e || t
    }

    function p(o) {
      for (; o !== e.body && !1 === f(o);) o = o.parentNode || o.host;
      return o
    }

    function u(e) {
      var t, l, r, n, s = (i() - e.startTime) / 468;
      n = s = s > 1 ? 1 : s, t = .5 * (1 - Math.cos(Math.PI * n)), l = e.startX + (e.x - e.startX) * t, r = e.startY + (e.y - e.startY) * t, e.method.call(e.scrollable, l, r), l === e.x && r === e.y || o.requestAnimationFrame(u.bind(o, e))
    }

    function m(t, l, n) {
      var c, a, d, f, p = i();
      t === e.body ? (c = o, a = o.scrollX || o.pageXOffset, d = o.scrollY || o.pageYOffset, f = r.scroll) : (c = t, a = t.scrollLeft, d = t.scrollTop, f = s), u({
        scrollable: c,
        method: f,
        startTime: p,
        startX: a,
        startY: d,
        x: l,
        y: n
      })
    }
  }
  "object" === ("undefined" == typeof exports ? "undefined" : _typeof(exports)) && "undefined" != typeof module ? module.exports = {
    polyfill: o
  } : o()
}();
var btnLink = document.querySelectorAll(".btn-link"),
  modalForm = document.querySelector(".modal-form"),
  closeBtn = document.querySelector(".close-btn");

function showModalForm() {
  modalForm.classList.toggle("hide"), document.body.classList.add("hidden")
}
closeBtn.addEventListener("click", (function () {
  modalForm.classList.add("hide"), document.body.classList.remove("hidden")
})), btnLink.forEach((function (o) {
  o.addEventListener("click", showModalForm)
})), modalForm.addEventListener("click", (function (o) {
  var e = o.target,
    t = document.querySelector(".form"),
    l = e.classList.contains("form"),
    r = t.contains(e);
  l || r || (modalForm.classList.add("hide"), document.body.classList.remove("hidden"))
}))